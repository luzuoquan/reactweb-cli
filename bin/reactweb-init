#!/usr/bin/env node

var download = require('download-git-repo')
var program = require('commander')
var exists = require('fs').existsSync
var path = require('path')
var ora = require('ora')
var home = require('user-home')
var tildify = require('tildify')
var chalk = require('chalk')
var inquirer = require('inquirer')
var rm = require('rimraf').sync

var localPath = require('../lib/local-path')

var isLocalPath = localPath.isLocalPath
var getTemplatePath = localPath.getTemplatePath

program.usage('<template-name> [project-name]')


program.on('--help', function() {
	console.log('  Examples:')
	console.log()
	console.log(chalk.gray('    # create a new project with an default template'))
	console.log('    $ reactweb init webpack my-project')
	console.log()
})

function help () {
  	program.parse(process.argv)
  	if (program.args.length < 1) return program.help()
}
help()

var template = program.args[0]
var hasSlash = template.indexOf('/') > -1
var rawName = program.args[1]
var inPlace = !rawName || rawName === '.'
var name = inPlace ? path.relative('../', process.cwd()) : rawName
var to = path.resolve(rawName || '.')
var clone = program.clone || false

var tmp = path.join(home, '.vue-templates', template.replace(/\//g, '-'))

console.log()
process.on('exit', function () {
  	console.log()
})

if(exists(to)) {
	inquirer.prompt([{
		type: 'confirm',
		message: inPlace ? 'Generate project in current directory?' : 'Target directory exists. Continue?',
		name: 'ok'
	}], function(answers) {
		if(answers.ok) {
			run()
		}
	})
}else {
	run() 
}

function downloadAndGenerate(template) {
	var spinner = ora('downloading template')
	spinner.start()
	if (exists(tmp)) rm(tmp)

	download(template, tmp, { clone: clone }, function (err) {
    	spinner.stop()
    	if (err) console.log('Failed to download repo ' + template + ': ' + err.message.trim())
	    generate(name, tmp, to, function (err) {
	    	if (err) console.log(err)
      		console.log('Generated "%s".', name)
    	})
  	})
}


function run() {
	console.log(home)
	if(isLocalPath(template)) {
		var templatePath = getTemplatePath(template)
		if(exists(templatePath)) {

		}else {
			console.log('Local template "%s" not found', template)
		}
	}else {
		var officialTemplate = 'luzuoquan/react-redux-react-router-antd-toolkit'
		// downloadAndGenerate(officialTemplate)
	}
}
